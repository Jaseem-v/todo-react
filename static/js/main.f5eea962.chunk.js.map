{"version":3,"sources":["components/Todo.js","components/TodoCompleted.js","components/TodoDelete.js","App.js","index.js"],"names":["Todo","todo","setTodos","todos","setDeleteData","deleteData","checkBox","e","filter","el","id","status","target","checked","className","v-for","type","onClick","text","title","TodoCompleted","time","TodoDelete","App","useState","inputText","setInputText","useEffect","getLocalStorage","saveLocalStorage","console","log","localStorage","setItem","JSON","stringify","getItem","localStorageDelete","parse","ocalStorageTodo","value","onChange","autocomplete","placeholder","preventDefault","Date","now","moment","format","classname","map","window","clear","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5eea962.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Todo({ todo, setTodos, todos, setDeleteData, deleteData }) {\r\n    const deleteHandler = () => {\r\n        setDeleteData([...deleteData, todo])\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n    }\r\n    const checkBox = (e) => {\r\n        setTodos(todos.filter(el => {\r\n            if (el.id === todo.id) {\r\n                todo.status = e.target.checked\r\n            }\r\n            return todo\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <li className=\"task-list-item\" v-for=\"task in tasks\">\r\n                <label className=\"task-list-item-label\">\r\n                    {todo.status ? (\r\n                        <input type=\"checkbox\" onClick={checkBox} checked />\r\n\r\n                    ) : (\r\n                            <input type=\"checkbox\" onClick={checkBox} />\r\n\r\n                        )}\r\n                    <span className={`${todo.status ? 'completed' : ''}`}>{todo.text}</span>\r\n                </label>\r\n                <span onClick={deleteHandler} className=\"delete-btn\" title=\"Delete Task\"></span>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\n\r\nfunction TodoCompleted({ todo, setTodos, todos }) {\r\n\r\n    return (\r\n        <div>\r\n            <li className=\"task-list-item\" v-for=\"task in tasks\">\r\n                <label className=\"task-list-item-label\">\r\n                    <div className=\"checkbox-cmplt\">\r\n                        <input type=\"checkbox\" checked  />\r\n                        <span>{todo.text}</span>\r\n                    </div>\r\n                </label>\r\n                <span className=\"date\" title=\"Delete Task\">{todo.time}</span>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoCompleted\r\n","import React from 'react'\r\n\r\n\r\n\r\nfunction TodoDelete({ todo, setTodos, todos, deleteData, setDeleteData }) {\r\n    const getDeleteData = () => {\r\n        setTodos([...todos, todo])\r\n        setDeleteData(deleteData.filter(el => el.id !== todo.id))\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <li className=\"task-list-item\" v-for=\"task in tasks\">\r\n                <label className=\"task-list-item-label\">\r\n                    {todo.status ? (\r\n                        <input type=\"checkbox\"  checked />\r\n\r\n                    ) : (\r\n                            <input type=\"checkbox\"  />\r\n\r\n                        )}\r\n                    <span>{todo.text}</span>\r\n                </label>\r\n                <span className=\"date\" title=\"Delete Task\" >{todo.time}</span>\r\n                <button onClick={getDeleteData}></button>\r\n\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoDelete\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Todo from './components/Todo'\nimport TodoCompleted from './components/TodoCompleted'\nimport TodoDelete from './components/TodoDelete'\nimport moment from \"moment\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  const [deleteData, setDeleteData] = useState([])\n  useEffect(() => {\n    getLocalStorage();\n    // saveLocalStorage();\n\n  }, [])\n  useEffect(() => {\n    saveLocalStorage();\n  }, [todos])\n\n  // function components\n  const inputHandler = (e) => {\n    setInputText(e.target.value)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    setTodos([...todos, { text: inputText, status: false, id: Date.now(), time: moment().format(\"LLLL\") }])\n    setInputText(\"\")\n  }\n\n\n  console.log(deleteData);\n\n  const saveLocalStorage = () => {\n    localStorage.setItem(\"deleteData\", JSON.stringify(deleteData))\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n\n  }\n  const getLocalStorage = () => {\n    if (localStorage.getItem(\"deleteData\") === null) {\n      localStorage.setItem(\"deleteData\", JSON.stringify([]))\n    } else {\n      let localStorageDelete = JSON.parse(localStorage.getItem(\"deleteData\"))\n      setDeleteData(localStorageDelete);\n    }\n\n\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]))\n    } else {\n      let ocalStorageTodo = JSON.parse(localStorage.getItem(\"todos\"))\n      setTodos(ocalStorageTodo);\n    }\n  }\n\n  const clear =()=>{\n    window.localStorage.clear();\n    window.location.reload();\n  }\n\n  // ------------------------\n  return (\n    <div className=\"total\">\n      <div className=\"app-container\" id=\"taskList\">\n        <h1 className=\"app-header\">TO DO LIST</h1>\n        <div className=\"add-task\">\n          <input value={inputText} onChange={inputHandler} type=\"text\" autocomplete=\"off\" placeholder=\"Add New Task\" className=\"task-input\" />\n          <input onClick={submitHandler} type=\"submit\" value=\"\" className=\"submit-task\" title=\"Add Task\" />\n        </div>\n        <ul classname=\"task-list\">\n          {\n            todos.map((todo) => {\n              if (todo.text !== \"\") {\n                return (\n                  <Todo\n                    todo={todo}\n                    todos={todos}\n                    key={todo.id}\n                    setTodos={setTodos}\n                    deleteData={deleteData}\n                    setDeleteData={setDeleteData} />\n\n                )\n              }\n              return null\n            }\n            )\n          }\n        </ul>\n      </div>\n\n      {/* {completed-data  --------------------------------} */}\n      <div className=\"app-container complted-div\" id=\"taskList\">\n        <h1 className=\"app-header\">Completed</h1>\n        <ul classname=\"task-list\">\n          <div>\n            {\n              todos.map((todo) => {\n                if (todo.status) {\n\n                  return (\n                    <TodoCompleted\n                      todos={todos}\n                      key={todo.id}\n                      todo={todo}\n                      setTodos={setTodos} />\n\n                  )\n                }\n                return null\n              })\n            }\n          </div>\n        </ul>\n      </div>\n\n      {/* {Deleted data---------------------------------} */}\n      <div className=\"app-container deleted-div\" id=\"taskList\">\n        <h1 className=\"app-header\">Deleted</h1>\n        <ul classname=\"task-list\">\n          <div>\n            {\n              deleteData.map((todo) => {\n                if (todo.text !== \"\") {\n                  return (\n                    <TodoDelete\n                      todos={todos}\n                      setTodos={setTodos}\n                      key={todo.id}\n                      todo={todo}\n                      deleteData={deleteData}\n                      setDeleteData={setDeleteData}\n                    />\n                  )\n                }\n                return null\n              }\n              )\n            }\n\n          </div>\n        </ul>\n      </div>\n      {/* {-------------------Deleted data---------------------------------} */}\n      <div className=\"clear\">\n        <button className=\"clear-btn\" onClick={clear}> all clear</button>\n      </div>\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}